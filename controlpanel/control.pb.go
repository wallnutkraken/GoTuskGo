// Code generated by protoc-gen-go. DO NOT EDIT.
// source: control.proto

package controlpanel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthCode struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthCode) Reset()         { *m = AuthCode{} }
func (m *AuthCode) String() string { return proto.CompactTextString(m) }
func (*AuthCode) ProtoMessage()    {}
func (*AuthCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{0}
}
func (m *AuthCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthCode.Unmarshal(m, b)
}
func (m *AuthCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthCode.Marshal(b, m, deterministic)
}
func (dst *AuthCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCode.Merge(dst, src)
}
func (m *AuthCode) XXX_Size() int {
	return xxx_messageInfo_AuthCode.Size(m)
}
func (m *AuthCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCode proto.InternalMessageInfo

func (m *AuthCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type AppErrors struct {
	Error                []*ApplicationError `protobuf:"bytes,1,rep,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AppErrors) Reset()         { *m = AppErrors{} }
func (m *AppErrors) String() string { return proto.CompactTextString(m) }
func (*AppErrors) ProtoMessage()    {}
func (*AppErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{1}
}
func (m *AppErrors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppErrors.Unmarshal(m, b)
}
func (m *AppErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppErrors.Marshal(b, m, deterministic)
}
func (dst *AppErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppErrors.Merge(dst, src)
}
func (m *AppErrors) XXX_Size() int {
	return xxx_messageInfo_AppErrors.Size(m)
}
func (m *AppErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_AppErrors.DiscardUnknown(m)
}

var xxx_messageInfo_AppErrors proto.InternalMessageInfo

func (m *AppErrors) GetError() []*ApplicationError {
	if m != nil {
		return m.Error
	}
	return nil
}

type ApplicationError struct {
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Unix                 int64    `protobuf:"varint,2,opt,name=Unix,proto3" json:"Unix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationError) Reset()         { *m = ApplicationError{} }
func (m *ApplicationError) String() string { return proto.CompactTextString(m) }
func (*ApplicationError) ProtoMessage()    {}
func (*ApplicationError) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{2}
}
func (m *ApplicationError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationError.Unmarshal(m, b)
}
func (m *ApplicationError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationError.Marshal(b, m, deterministic)
}
func (dst *ApplicationError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationError.Merge(dst, src)
}
func (m *ApplicationError) XXX_Size() int {
	return xxx_messageInfo_ApplicationError.Size(m)
}
func (m *ApplicationError) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationError.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationError proto.InternalMessageInfo

func (m *ApplicationError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ApplicationError) GetUnix() int64 {
	if m != nil {
		return m.Unix
	}
	return 0
}

type SerializedData struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerializedData) Reset()         { *m = SerializedData{} }
func (m *SerializedData) String() string { return proto.CompactTextString(m) }
func (*SerializedData) ProtoMessage()    {}
func (*SerializedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{3}
}
func (m *SerializedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerializedData.Unmarshal(m, b)
}
func (m *SerializedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerializedData.Marshal(b, m, deterministic)
}
func (dst *SerializedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerializedData.Merge(dst, src)
}
func (m *SerializedData) XXX_Size() int {
	return xxx_messageInfo_SerializedData.Size(m)
}
func (m *SerializedData) XXX_DiscardUnknown() {
	xxx_messageInfo_SerializedData.DiscardUnknown(m)
}

var xxx_messageInfo_SerializedData proto.InternalMessageInfo

func (m *SerializedData) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type SetConfigParams struct {
	Auth                 *AuthCode       `protobuf:"bytes,1,opt,name=Auth,proto3" json:"Auth,omitempty"`
	Data                 *SerializedData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SetConfigParams) Reset()         { *m = SetConfigParams{} }
func (m *SetConfigParams) String() string { return proto.CompactTextString(m) }
func (*SetConfigParams) ProtoMessage()    {}
func (*SetConfigParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{4}
}
func (m *SetConfigParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigParams.Unmarshal(m, b)
}
func (m *SetConfigParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigParams.Marshal(b, m, deterministic)
}
func (dst *SetConfigParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigParams.Merge(dst, src)
}
func (m *SetConfigParams) XXX_Size() int {
	return xxx_messageInfo_SetConfigParams.Size(m)
}
func (m *SetConfigParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigParams.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigParams proto.InternalMessageInfo

func (m *SetConfigParams) GetAuth() *AuthCode {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *SetConfigParams) GetData() *SerializedData {
	if m != nil {
		return m.Data
	}
	return nil
}

type MessageList struct {
	Auth                 *AuthCode `protobuf:"bytes,1,opt,name=Auth,proto3" json:"Auth,omitempty"`
	Message              []string  `protobuf:"bytes,2,rep,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MessageList) Reset()         { *m = MessageList{} }
func (m *MessageList) String() string { return proto.CompactTextString(m) }
func (*MessageList) ProtoMessage()    {}
func (*MessageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{5}
}
func (m *MessageList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageList.Unmarshal(m, b)
}
func (m *MessageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageList.Marshal(b, m, deterministic)
}
func (dst *MessageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageList.Merge(dst, src)
}
func (m *MessageList) XXX_Size() int {
	return xxx_messageInfo_MessageList.Size(m)
}
func (m *MessageList) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageList.DiscardUnknown(m)
}

var xxx_messageInfo_MessageList proto.InternalMessageInfo

func (m *MessageList) GetAuth() *AuthCode {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *MessageList) GetMessage() []string {
	if m != nil {
		return m.Message
	}
	return nil
}

type RestoreDB struct {
	Auth                 *AuthCode `protobuf:"bytes,1,opt,name=Auth,proto3" json:"Auth,omitempty"`
	Content              []byte    `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RestoreDB) Reset()         { *m = RestoreDB{} }
func (m *RestoreDB) String() string { return proto.CompactTextString(m) }
func (*RestoreDB) ProtoMessage()    {}
func (*RestoreDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{6}
}
func (m *RestoreDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreDB.Unmarshal(m, b)
}
func (m *RestoreDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreDB.Marshal(b, m, deterministic)
}
func (dst *RestoreDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreDB.Merge(dst, src)
}
func (m *RestoreDB) XXX_Size() int {
	return xxx_messageInfo_RestoreDB.Size(m)
}
func (m *RestoreDB) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreDB.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreDB proto.InternalMessageInfo

func (m *RestoreDB) GetAuth() *AuthCode {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *RestoreDB) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_control_d3639e8ed494d583, []int{7}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AuthCode)(nil), "controlpanel.AuthCode")
	proto.RegisterType((*AppErrors)(nil), "controlpanel.AppErrors")
	proto.RegisterType((*ApplicationError)(nil), "controlpanel.ApplicationError")
	proto.RegisterType((*SerializedData)(nil), "controlpanel.SerializedData")
	proto.RegisterType((*SetConfigParams)(nil), "controlpanel.SetConfigParams")
	proto.RegisterType((*MessageList)(nil), "controlpanel.MessageList")
	proto.RegisterType((*RestoreDB)(nil), "controlpanel.RestoreDB")
	proto.RegisterType((*Empty)(nil), "controlpanel.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	GetApplicationErrors(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (*AppErrors, error)
	SetConfig(ctx context.Context, in *SetConfigParams, opts ...grpc.CallOption) (*Empty, error)
	GetConfig(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (*SerializedData, error)
	GetDatabase(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (Controller_GetDatabaseClient, error)
	AddToDatabase(ctx context.Context, in *MessageList, opts ...grpc.CallOption) (*Empty, error)
	TriggerSendout(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (*Empty, error)
	RestoreFromDbExport(ctx context.Context, in *RestoreDB, opts ...grpc.CallOption) (*Empty, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) GetApplicationErrors(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (*AppErrors, error) {
	out := new(AppErrors)
	err := c.cc.Invoke(ctx, "/controlpanel.Controller/GetApplicationErrors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) SetConfig(ctx context.Context, in *SetConfigParams, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/controlpanel.Controller/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetConfig(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (*SerializedData, error) {
	out := new(SerializedData)
	err := c.cc.Invoke(ctx, "/controlpanel.Controller/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetDatabase(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (Controller_GetDatabaseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[0], "/controlpanel.Controller/GetDatabase", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerGetDatabaseClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_GetDatabaseClient interface {
	Recv() (*SerializedData, error)
	grpc.ClientStream
}

type controllerGetDatabaseClient struct {
	grpc.ClientStream
}

func (x *controllerGetDatabaseClient) Recv() (*SerializedData, error) {
	m := new(SerializedData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) AddToDatabase(ctx context.Context, in *MessageList, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/controlpanel.Controller/AddToDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) TriggerSendout(ctx context.Context, in *AuthCode, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/controlpanel.Controller/TriggerSendout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) RestoreFromDbExport(ctx context.Context, in *RestoreDB, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/controlpanel.Controller/RestoreFromDbExport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	GetApplicationErrors(context.Context, *AuthCode) (*AppErrors, error)
	SetConfig(context.Context, *SetConfigParams) (*Empty, error)
	GetConfig(context.Context, *AuthCode) (*SerializedData, error)
	GetDatabase(*AuthCode, Controller_GetDatabaseServer) error
	AddToDatabase(context.Context, *MessageList) (*Empty, error)
	TriggerSendout(context.Context, *AuthCode) (*Empty, error)
	RestoreFromDbExport(context.Context, *RestoreDB) (*Empty, error)
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_GetApplicationErrors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetApplicationErrors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controlpanel.Controller/GetApplicationErrors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetApplicationErrors(ctx, req.(*AuthCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controlpanel.Controller/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).SetConfig(ctx, req.(*SetConfigParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controlpanel.Controller/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetConfig(ctx, req.(*AuthCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetDatabase_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AuthCode)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).GetDatabase(m, &controllerGetDatabaseServer{stream})
}

type Controller_GetDatabaseServer interface {
	Send(*SerializedData) error
	grpc.ServerStream
}

type controllerGetDatabaseServer struct {
	grpc.ServerStream
}

func (x *controllerGetDatabaseServer) Send(m *SerializedData) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_AddToDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).AddToDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controlpanel.Controller/AddToDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).AddToDatabase(ctx, req.(*MessageList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_TriggerSendout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).TriggerSendout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controlpanel.Controller/TriggerSendout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).TriggerSendout(ctx, req.(*AuthCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_RestoreFromDbExport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreDB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).RestoreFromDbExport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controlpanel.Controller/RestoreFromDbExport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).RestoreFromDbExport(ctx, req.(*RestoreDB))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controlpanel.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetApplicationErrors",
			Handler:    _Controller_GetApplicationErrors_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _Controller_SetConfig_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _Controller_GetConfig_Handler,
		},
		{
			MethodName: "AddToDatabase",
			Handler:    _Controller_AddToDatabase_Handler,
		},
		{
			MethodName: "TriggerSendout",
			Handler:    _Controller_TriggerSendout_Handler,
		},
		{
			MethodName: "RestoreFromDbExport",
			Handler:    _Controller_RestoreFromDbExport_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDatabase",
			Handler:       _Controller_GetDatabase_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "control.proto",
}

func init() { proto.RegisterFile("control.proto", fileDescriptor_control_d3639e8ed494d583) }

var fileDescriptor_control_d3639e8ed494d583 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x55, 0xda, 0x8e, 0x92, 0x9b, 0x6d, 0x20, 0x6f, 0x82, 0x30, 0xc1, 0x54, 0xe5, 0xa9, 0xda,
	0x43, 0x35, 0x05, 0x1e, 0x41, 0x53, 0x48, 0x43, 0x5e, 0x40, 0x02, 0x67, 0x7c, 0x80, 0xbb, 0x5c,
	0x82, 0xa5, 0xd4, 0xb6, 0x6c, 0x4f, 0x1a, 0xfc, 0x2f, 0xff, 0x81, 0xe2, 0xa6, 0x61, 0x09, 0x2d,
	0xd2, 0x78, 0xea, 0xbd, 0xf2, 0xb9, 0xe7, 0xdc, 0x7b, 0x4e, 0x03, 0x47, 0x37, 0x52, 0x58, 0x2d,
	0xeb, 0x85, 0xd2, 0xd2, 0x4a, 0x72, 0xd8, 0xb6, 0x8a, 0x09, 0xac, 0xa3, 0x73, 0x78, 0x9c, 0xdc,
	0xda, 0xef, 0xa9, 0x2c, 0x91, 0x10, 0x98, 0x34, 0xbf, 0xa1, 0x37, 0xf3, 0xe6, 0x3e, 0x75, 0x75,
	0x94, 0x80, 0x9f, 0x28, 0x95, 0x69, 0x2d, 0xb5, 0x21, 0x6f, 0xe0, 0xc0, 0x55, 0xa1, 0x37, 0x1b,
	0xcf, 0x83, 0xf8, 0x7c, 0x71, 0x9f, 0x6a, 0x91, 0x28, 0x55, 0xf3, 0x1b, 0x66, 0xb9, 0x14, 0x0e,
	0x45, 0x37, 0xe0, 0xe8, 0x2d, 0x3c, 0x1d, 0x3e, 0x91, 0xd3, 0x3f, 0x4c, 0x8d, 0xd6, 0xa6, 0x69,
	0x16, 0xf8, 0x2a, 0xf8, 0x5d, 0x38, 0x9a, 0x79, 0xf3, 0x31, 0x75, 0x75, 0x74, 0x01, 0xc7, 0x05,
	0x6a, 0xce, 0x6a, 0xfe, 0x13, 0xcb, 0x25, 0xb3, 0x8c, 0x84, 0x30, 0x4d, 0xa5, 0xb0, 0x28, 0xac,
	0x9b, 0x3e, 0xa4, 0xdb, 0x36, 0x92, 0xf0, 0xa4, 0x40, 0x9b, 0x4a, 0xf1, 0x8d, 0x57, 0x9f, 0x99,
	0x66, 0x6b, 0x43, 0x2e, 0x60, 0xd2, 0xdc, 0xe7, 0x90, 0x41, 0xfc, 0x6c, 0xb0, 0x71, 0x7b, 0x39,
	0x75, 0x18, 0x72, 0x09, 0x93, 0x46, 0xc0, 0xc9, 0x07, 0xf1, 0xcb, 0x3e, 0xb6, 0xbf, 0x04, 0x75,
	0xc8, 0xa8, 0x80, 0xe0, 0x13, 0x1a, 0xc3, 0x2a, 0xfc, 0xc8, 0x8d, 0x7d, 0x90, 0x58, 0x08, 0xd3,
	0x76, 0x34, 0x1c, 0xcd, 0xc6, 0x73, 0x9f, 0x6e, 0xdb, 0xe8, 0x0b, 0xf8, 0x14, 0x8d, 0x95, 0x1a,
	0x97, 0xef, 0x1f, 0x4a, 0xb9, 0x35, 0x66, 0xd4, 0x37, 0x66, 0x0a, 0x07, 0xd9, 0x5a, 0xd9, 0x1f,
	0xf1, 0xaf, 0x31, 0x40, 0xba, 0xa1, 0xa8, 0x51, 0x93, 0x1c, 0x4e, 0x73, 0xb4, 0xc3, 0x74, 0x0c,
	0xd9, 0xa3, 0x73, 0xf6, 0xfc, 0xaf, 0xc4, 0xdb, 0x81, 0x2b, 0xf0, 0x3b, 0xe7, 0xc9, 0xab, 0xa1,
	0x73, 0xbd, 0x48, 0xce, 0x4e, 0xfa, 0xcf, 0x6e, 0x31, 0x92, 0x80, 0x9f, 0x77, 0x04, 0xfb, 0xe4,
	0xff, 0x19, 0x09, 0xc9, 0x20, 0xc8, 0xd1, 0x36, 0xe5, 0x8a, 0x19, 0xfc, 0x3f, 0x92, 0x4b, 0x8f,
	0x5c, 0xc1, 0x51, 0x52, 0x96, 0xd7, 0xb2, 0x23, 0x7a, 0xd1, 0x1f, 0xb8, 0x17, 0xf8, 0xee, 0x53,
	0xde, 0xc1, 0xf1, 0xb5, 0xe6, 0x55, 0x85, 0xba, 0x40, 0x51, 0xca, 0x5b, 0xbb, 0x77, 0x95, 0x9d,
	0xe3, 0x29, 0x9c, 0xb4, 0xf1, 0x7f, 0xd0, 0x72, 0xbd, 0x5c, 0x65, 0x77, 0x4a, 0x6a, 0x4b, 0x06,
	0xd6, 0x77, 0xff, 0x90, 0x9d, 0x24, 0xab, 0x47, 0xee, 0x5b, 0x7f, 0xfd, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x37, 0x5d, 0xb8, 0x71, 0xfc, 0x03, 0x00, 0x00,
}
